name: Build HarukiToolboxBackend

on:
  push:
    tags:
      - 'v*'

jobs:
  build:
    name: Build for Multiple Platforms
    runs-on: ubuntu-latest
    env:
      VERSION: ${{ github.ref_name }}
    strategy:
      matrix:
        platform: [windows-x64, linux-x64, linux-arm64, macos-arm64]

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up Go
        uses: actions/setup-go@v4
        with:
          go-version: 1.25.3

      - name: Build Executable
        run: |
          mkdir -p dist
          BIN_NAME=HarukiToolboxBackend-${VERSION}-${{ matrix.platform }}
          case "${{ matrix.platform }}" in
            windows-x64)
              GOOS=windows GOARCH=amd64 go build -ldflags="-s -w -X=haruki-suite/version.Version=${VERSION}" -o dist/${BIN_NAME}-Windows-x64.exe ./main.go
              ;;
            linux-x64)
              GOOS=linux GOARCH=amd64 go build -ldflags="-s -w -X=haruki-suite/version.Version=${VERSION}" -o dist/${BIN_NAME}-Linux-amd64 ./main.go
              ;;
            linux-arm64)
              GOOS=linux GOARCH=arm64 go build -ldflags="-s -w -X=haruki-suite/version.Version=${VERSION}" -o dist/${BIN_NAME}-Linux-arm64 ./main.go
              ;;
            macos-arm64)
              GOOS=darwin GOARCH=arm64 go build -ldflags="-s -w -X=haruki-suite/version.Version=${VERSION}" -o dist/${BIN_NAME}-macOS-arm64 ./main.go
              ;;
          esac

      - name: Compress Artifacts
        run: |
          set -euo pipefail
          mkdir -p dist/pkg
          case "${{ matrix.platform }}" in
            windows-x64)
              FILE=$(ls dist/*-Windows-x64.exe)
              OUT="dist/pkg/HarukiToolboxBackend-${VERSION}-windows-x64.zip"
              (cd dist && zip -9 "../pkg/$(basename "$OUT")" "$(basename "$FILE")")
              ;;
            linux-x64)
              FILE=$(ls dist/*-Linux-amd64)
              OUT="dist/pkg/HarukiToolboxBackend-${VERSION}-linux-x64.tar.gz"
              (cd dist && tar -czf "../pkg/$(basename "$OUT")" "$(basename "$FILE")")
              ;;
            linux-arm64)
              FILE=$(ls dist/*-Linux-arm64)
              OUT="dist/pkg/HarukiToolboxBackend-${VERSION}-linux-arm64.tar.gz"
              (cd dist && tar -czf "../pkg/$(basename "$OUT")" "$(basename "$FILE")")
              ;;
            macos-arm64)
              FILE=$(ls dist/*-macOS-arm64)
              OUT="dist/pkg/HarukiToolboxBackend-${VERSION}-macos-arm64.tar.gz"
              (cd dist && tar -czf "../pkg/$(basename "$OUT")" "$(basename "$FILE")")
              ;;
          esac

      - name: Generate checksums
        run: |
          set -euo pipefail
          cd dist/pkg
          shopt -s nullglob
          sha256sum * > "SHA256SUMS-${VERSION}.txt"

      - name: Create Release
        id: create_release
        uses: softprops/action-gh-release@v1
        with:
          tag_name: ${{ github.ref_name }}
          name: HarukiToolboxBackend-${{ github.ref_name }}
        env:
          GITHUB_TOKEN: ${{ secrets.GH_PAT }}

      - name: Upload Release Assets
        uses: softprops/action-gh-release@v1
        with:
          files: |
            dist/pkg/HarukiToolboxBackend-${{ github.ref_name }}-*.zip
            dist/pkg/HarukiToolboxBackend-${{ github.ref_name }}-*.tar.gz
            dist/pkg/SHA256SUMS-${{ github.ref_name }}.txt
        env:
          GITHUB_TOKEN: ${{ secrets.GH_PAT }}