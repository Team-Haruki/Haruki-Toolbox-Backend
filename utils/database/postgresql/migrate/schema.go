// Code generated by ent, DO NOT EDIT.

package migrate

import (
	"entgo.io/ent/dialect/sql/schema"
	"entgo.io/ent/schema/field"
)

var (
	// AuthorizeSocialPlatformInfosColumns holds the columns for the "authorize_social_platform_infos" table.
	AuthorizeSocialPlatformInfosColumns = []*schema.Column{
		{Name: "id", Type: field.TypeInt, Increment: true},
		{Name: "platform", Type: field.TypeString},
		{Name: "platform_user_id", Type: field.TypeString},
		{Name: "platform_id", Type: field.TypeInt},
		{Name: "comment", Type: field.TypeString, Nullable: true},
		{Name: "user_id", Type: field.TypeString},
	}
	// AuthorizeSocialPlatformInfosTable holds the schema information for the "authorize_social_platform_infos" table.
	AuthorizeSocialPlatformInfosTable = &schema.Table{
		Name:       "authorize_social_platform_infos",
		Columns:    AuthorizeSocialPlatformInfosColumns,
		PrimaryKey: []*schema.Column{AuthorizeSocialPlatformInfosColumns[0]},
		ForeignKeys: []*schema.ForeignKey{
			{
				Symbol:     "authorize_social_platform_infos_users_authorized_social_platforms",
				Columns:    []*schema.Column{AuthorizeSocialPlatformInfosColumns[5]},
				RefColumns: []*schema.Column{UsersColumns[0]},
				OnDelete:   schema.NoAction,
			},
		},
		Indexes: []*schema.Index{
			{
				Name:    "authorizesocialplatforminfo_user_id_platform_id",
				Unique:  true,
				Columns: []*schema.Column{AuthorizeSocialPlatformInfosColumns[5], AuthorizeSocialPlatformInfosColumns[3]},
			},
		},
	}
	// EmailInfosColumns holds the columns for the "email_infos" table.
	EmailInfosColumns = []*schema.Column{
		{Name: "id", Type: field.TypeInt, Increment: true},
		{Name: "email", Type: field.TypeString, Unique: true},
		{Name: "verified", Type: field.TypeBool, Default: false},
		{Name: "user_email_info", Type: field.TypeString, Unique: true, Nullable: true},
	}
	// EmailInfosTable holds the schema information for the "email_infos" table.
	EmailInfosTable = &schema.Table{
		Name:       "email_infos",
		Columns:    EmailInfosColumns,
		PrimaryKey: []*schema.Column{EmailInfosColumns[0]},
		ForeignKeys: []*schema.ForeignKey{
			{
				Symbol:     "email_infos_users_email_info",
				Columns:    []*schema.Column{EmailInfosColumns[3]},
				RefColumns: []*schema.Column{UsersColumns[0]},
				OnDelete:   schema.SetNull,
			},
		},
	}
	// GameAccountBindingsColumns holds the columns for the "game_account_bindings" table.
	GameAccountBindingsColumns = []*schema.Column{
		{Name: "id", Type: field.TypeInt, Increment: true},
		{Name: "server", Type: field.TypeString},
		{Name: "game_user_id", Type: field.TypeString},
		{Name: "verified", Type: field.TypeBool, Default: false},
		{Name: "suite", Type: field.TypeJSON, Nullable: true},
		{Name: "mysekai", Type: field.TypeJSON, Nullable: true},
		{Name: "user_game_account_bindings", Type: field.TypeString, Nullable: true},
	}
	// GameAccountBindingsTable holds the schema information for the "game_account_bindings" table.
	GameAccountBindingsTable = &schema.Table{
		Name:       "game_account_bindings",
		Columns:    GameAccountBindingsColumns,
		PrimaryKey: []*schema.Column{GameAccountBindingsColumns[0]},
		ForeignKeys: []*schema.ForeignKey{
			{
				Symbol:     "game_account_bindings_users_game_account_bindings",
				Columns:    []*schema.Column{GameAccountBindingsColumns[6]},
				RefColumns: []*schema.Column{UsersColumns[0]},
				OnDelete:   schema.SetNull,
			},
		},
	}
	// SocialPlatformInfosColumns holds the columns for the "social_platform_infos" table.
	SocialPlatformInfosColumns = []*schema.Column{
		{Name: "id", Type: field.TypeInt, Increment: true},
		{Name: "platform", Type: field.TypeString},
		{Name: "platform_user_id", Type: field.TypeString},
		{Name: "verified", Type: field.TypeBool, Default: false},
		{Name: "user_social_platform_info", Type: field.TypeString, Unique: true},
	}
	// SocialPlatformInfosTable holds the schema information for the "social_platform_infos" table.
	SocialPlatformInfosTable = &schema.Table{
		Name:       "social_platform_infos",
		Columns:    SocialPlatformInfosColumns,
		PrimaryKey: []*schema.Column{SocialPlatformInfosColumns[0]},
		ForeignKeys: []*schema.ForeignKey{
			{
				Symbol:     "social_platform_infos_users_social_platform_info",
				Columns:    []*schema.Column{SocialPlatformInfosColumns[4]},
				RefColumns: []*schema.Column{UsersColumns[0]},
				OnDelete:   schema.NoAction,
			},
		},
	}
	// UsersColumns holds the columns for the "users" table.
	UsersColumns = []*schema.Column{
		{Name: "id", Type: field.TypeString, Unique: true},
		{Name: "name", Type: field.TypeString},
		{Name: "email", Type: field.TypeString, Unique: true},
		{Name: "password_hash", Type: field.TypeString},
		{Name: "avatar_path", Type: field.TypeString, Nullable: true},
		{Name: "allow_cn_mysekai", Type: field.TypeBool, Default: false},
	}
	// UsersTable holds the schema information for the "users" table.
	UsersTable = &schema.Table{
		Name:       "users",
		Columns:    UsersColumns,
		PrimaryKey: []*schema.Column{UsersColumns[0]},
	}
	// Tables holds all the tables in the schema.
	Tables = []*schema.Table{
		AuthorizeSocialPlatformInfosTable,
		EmailInfosTable,
		GameAccountBindingsTable,
		SocialPlatformInfosTable,
		UsersTable,
	}
)

func init() {
	AuthorizeSocialPlatformInfosTable.ForeignKeys[0].RefTable = UsersTable
	EmailInfosTable.ForeignKeys[0].RefTable = UsersTable
	GameAccountBindingsTable.ForeignKeys[0].RefTable = UsersTable
	SocialPlatformInfosTable.ForeignKeys[0].RefTable = UsersTable
}
